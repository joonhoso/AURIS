name : auris-tm-displays
version : 0.0.0.1
synopsis : A telemetry packet history for AURIS
description:
    A commanding application for mission control
license : BSD3
license-file : LICENSE
author : Michael Oswald
build-type: Custom
maintainer: michael.oswald@onikudaki.net
homepage:
category: UI,Graphics
cabal-version: >=2.0


source-repository head
  type: git
  location: http://github.com/oswald2/AURIS

custom-setup
  setup-depends:
      Cabal >=2.2.0.0 && <4
    , base >=4.4
    , filepath

Flag FastCompile
   Description: Turn off optimizations for faster compilation
   Manual: True
   Default: False

flag llvm
    description:
        build library with llvm
    default: False

flag optimize
    description:
      build library with optimization
    default: False



library

  exposed-modules:
    GUI.PUSPacketTable
    GUI.TMPacketTable
    GUI.TMPParamTable
    GUI.TMFrameTable
    GUI.TMPacketTab
    GUI.TMFrameTab
    GUI.TMParamTab
    GUI.Chart
    GUI.GraphWidget
    GUI.ParamDisplay



  Hs-Source-Dirs: src/
  Build-Depends:
    base == 4.*,
    text >= 1.2.2.0,
    rio,
    lens,
    containers,
    esa-base,
    esa-space-protocols,
    gui-base,
    text-short,
    Chart,
    Chart-gi-cairo,
    -- Chart-diagrams,
    colour,
    data-default-class,
    multiset,
    thyme,
    time,
    pretty-show,
    gi-gtk,
    gi-gtk-hs,
    gi-gobject,
    gi-cairo,
    gi-cairo-connector,
    gi-cairo-render,
    haskell-gi-base


  default-extensions:
        AutoDeriveTypeable
        BangPatterns
        BinaryLiterals
        ConstraintKinds
        DataKinds
        DefaultSignatures
        DeriveDataTypeable
        DeriveFoldable
        DeriveFunctor
        DeriveGeneric
        DeriveTraversable
        DoAndIfThenElse
        EmptyDataDecls
        ExistentialQuantification
        FlexibleContexts
        FlexibleInstances
        FunctionalDependencies
        GADTs
        GeneralizedNewtypeDeriving
        InstanceSigs
        KindSignatures
        LambdaCase
        MonadFailDesugaring
        MultiParamTypeClasses
        MultiWayIf
        NamedFieldPuns
        NoImplicitPrelude
        OverloadedStrings
        OverloadedLabels
        PartialTypeSignatures
        PatternGuards
        PolyKinds
        RankNTypes
        RecordWildCards
        ScopedTypeVariables
        StandaloneDeriving
        TupleSections
        TypeFamilies
        TypeSynonymInstances
        ViewPatterns
        NumericUnderscores


  default-language: Haskell2010
  if flag(llvm)
        ghc-options: -O2 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                     -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                     -funbox-strict-fields -fllvm -optlo-O3
  else
    if flag(optimize)
        ghc-options: -O2 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                     -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                     -funbox-strict-fields
    else
        ghc-options: -O0 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                     -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                     -funbox-strict-fields


  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0

  if os(windows)
    ghc-Options: -optl-mwindows
    ghc-Options: -pgml g++ "-optl-Wl,--allow-multiple-definition" "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"
  if os(darwin)
   ghc-Options: "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
   ghc-Options: -pgml g++ "-optl-Wl,--allow-multiple-definition" "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"
