-- Initial esa-mib.cabal generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                esa-mib

-- The package version.  See the Haskell package versioning policy (PVP)
-- for standards guiding when and how versions should be incremented.
-- https://wiki.haskell.org/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.1.0.0

-- A short (one-line) description of the package.
synopsis:            A library for handling ESAs SCOS-2000 compatible MIBs

-- A longer description of the package.
-- description:

-- URL for the project homepage or repository.
homepage:            https://github.com/oswald2/esa-mib

-- The license under which the package is released.
license:             BSD3

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Michael Oswald

-- An email address to which users can send suggestions, bug reports, and
-- patches.
maintainer:          michael.oswald@onikudaki.net

-- A copyright notice.
-- copyright:

category:            Data

build-type:          Simple

-- Extra files to be distributed with the package, such as examples or a
-- README.
extra-source-files:  CHANGELOG.md, README.md

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >=1.10

flag llvm
    description:
        build library with llvm
    default: False

flag optimize 
    description: 
      build library with optimization
    default: False 



library
  -- Modules exported by the library.
  exposed-modules:
    Data.MIB.Load
    Data.MIB.Types
    Data.MIB.PCF
    Data.MIB.PIC
    Data.MIB.PID
    Data.MIB.PLF
    Data.MIB.TPCF
    Data.MIB.VPD
    Data.MIB.VDF
    Data.MIB.CUR
    Data.MIB.CAF
    Data.MIB.CAP
    Data.MIB.TXF
    Data.MIB.TXP
    Data.MIB.MCF
    Data.MIB.LGF
    Data.MIB.GPF
    Data.MIB.GPC
    Data.MIB.LoadMIB
    Data.Conversion.Types
    Data.Conversion.Calibration
    Data.Conversion.Parameter
    Data.Conversion.Criteria
    Data.Conversion.TMPacket
    Data.Conversion.GRD
    Data.Conversion.Info

  -- Modules included in this library but not exported.
  -- other-modules:

  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:
  default-extensions:
        
        BangPatterns
        BinaryLiterals
        ConstraintKinds
        DataKinds
        DefaultSignatures
        DeriveDataTypeable
        DeriveFoldable
        DeriveFunctor
        DeriveGeneric
        DeriveTraversable
        DoAndIfThenElse
        EmptyDataDecls
        ExistentialQuantification
        FlexibleContexts
        FlexibleInstances
        FunctionalDependencies
        GADTs
        GeneralizedNewtypeDeriving
        InstanceSigs
        KindSignatures
        LambdaCase
        
        MultiParamTypeClasses
        MultiWayIf
        NamedFieldPuns
        NoImplicitPrelude
        OverloadedStrings
        PartialTypeSignatures
        PatternGuards
        PolyKinds
        RankNTypes
        RecordWildCards
        ScopedTypeVariables
        StandaloneDeriving
        TupleSections
        TypeFamilies
        TypeSynonymInstances
        ViewPatterns
  -- Other library packages from which modules are imported.
  build-depends:       base ==4.*
    , binary
    , serialise
    , aeson
    , rio
    , bytestring
    , text
    , cassava
    , vector
    , vector-algorithms
    , filepath
    , unordered-containers
    , containers
    , hashable
    , multimap
    , directory
    , lens
    , esa-base
    , text-short
    , mtl
    , hashtables-mo
    , colour
    , ghc-compact

  -- Directories containing source files.
  hs-source-dirs:      src

  -- Base language which the package is written in.
  default-language:    Haskell2010

  if flag(llvm)
        ghc-options: -O2 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                     -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                     -funbox-strict-fields -fllvm -optlo-O3
  else 
    if flag(optimize) 
        ghc-options: -O2 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                     -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                     -funbox-strict-fields
    else 
        ghc-options: -O0 -g2 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                     -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                     -funbox-strict-fields


executable LoadMIBTest
    main-is: LoadMIBTest.hs
    default-language: Haskell2010
    hs-source-dirs: test
    ghc-options: -Wall -O2 -funbox-strict-fields -rtsopts
    default-extensions:
        
        BangPatterns
        BinaryLiterals
        ConstraintKinds
        DataKinds
        DefaultSignatures
        DeriveDataTypeable
        DeriveFoldable
        DeriveFunctor
        DeriveGeneric
        DeriveTraversable
        DoAndIfThenElse
        EmptyDataDecls
        ExistentialQuantification
        FlexibleContexts
        FlexibleInstances
        FunctionalDependencies
        GADTs
        GeneralizedNewtypeDeriving
        InstanceSigs
        KindSignatures
        LambdaCase
        
        MultiParamTypeClasses
        MultiWayIf
        NamedFieldPuns
        NoImplicitPrelude
        OverloadedStrings
        PartialTypeSignatures
        PatternGuards
        PolyKinds
        RankNTypes
        RecordWildCards
        ScopedTypeVariables
        StandaloneDeriving
        TupleSections
        TypeFamilies
        TypeSynonymInstances
        ViewPatterns
    build-depends:
        esa-base,
        esa-mib,
        base,
        bytestring,
        rio,
        text,
        unliftio,
        hspec,
        pretty-show,
        vector,
        hashtables-mo,
        ghc-compact


test-suite esa-mib-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Spec.Parser,
      Spec.Calibration
  hs-source-dirs:
      test
  default-extensions:
      OverloadedStrings
  ghc-options: -Wall -Werror -O2 -funbox-strict-fields
  build-depends:
      base >=4.7 && <5,
      bytestring,
      cassava,
      hspec,
      vector,
      esa-base,
      esa-mib
  default-language: Haskell2010
