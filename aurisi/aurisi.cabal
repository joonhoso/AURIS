name : aurisi
version : 0.0.0.1
synopsis : Integrated GUI for the AURIS mission control system
description:
    The graphical user interface for the (integrated) version of AURIS
license : BSD3
license-file : LICENSE
author : Michael Oswald
build-type: Simple
maintainer: michael.oswald@onikudaki.net
homepage:
category: UI,Graphics
cabal-version: 2.0

source-repository head
  type: git
  location: http://github.com/oswald2/AURIS

Flag FastCompile
   Description: Turn off optimizations for faster compilation
   Manual: True
   Default: False

flag llvm
    description:
        build library with llvm
    default: False

flag optimize
    description:
      build library with optimization
    default: False

flag sle 
    description:
      Build with SLE support. Requires a valid installation of ESA's C++ SLE API
    default: False 



executable AURISi
  Main-Is: AURISiMain.hs
  c-sources: csrc/resources.c
  Hs-Source-Dirs: src/

  Build-Depends:
    base == 4.*,
    text,
    directory,
    rio,
    lib-aurisi,
    optparse-generic

  if flag(sle)
    cpp-options: -DHAS_SLE
    extra-lib-dirs: 
      ../sle-wrapper/sle-wrapper/build/lib
      /opt/platform3pp/P3PPSLE-API-64bit-5.1.0i3/lib
    extra-libraries:
      stdc++ gcc_s dl z pthread asnsdk_50_sles15_64bit_gcc7 SLEwrapper sleapi sleinf :libcrypto.so.1.1 :libssl.so.1.1


  default-extensions:
        BangPatterns
        BinaryLiterals
        ConstraintKinds
        DataKinds
        DefaultSignatures
        DeriveDataTypeable
        DeriveFoldable
        DeriveFunctor
        DeriveGeneric
        DeriveTraversable
        DoAndIfThenElse
        EmptyDataDecls
        ExistentialQuantification
        FlexibleContexts
        FlexibleInstances
        FunctionalDependencies
        GADTs
        GeneralizedNewtypeDeriving
        InstanceSigs
        KindSignatures
        LambdaCase
        MultiParamTypeClasses
        MultiWayIf
        NamedFieldPuns
        OverloadedStrings
        OverloadedLabels
        PartialTypeSignatures
        PatternGuards
        PolyKinds
        RankNTypes
        RecordWildCards
        ScopedTypeVariables
        StandaloneDeriving
        TupleSections
        TypeFamilies
        TypeSynonymInstances
        ViewPatterns
        NumericUnderscores


  default-language: Haskell2010
  if flag(llvm)
        ghc-options: -O2 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                     -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                     -funbox-strict-fields -fllvm -optlo-O3 -threaded -rtsopts 
  else
    if flag(optimize)
        ghc-options: -O2 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                     -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                     -funbox-strict-fields  -threaded -rtsopts 
    else
        ghc-options: -O0 -g2 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                     -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                     -funbox-strict-fields  -threaded -rtsopts 
                     -- for more verbosity for debugging compilations, add: -v -optl-v




